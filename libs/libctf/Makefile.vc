
!ifdef ROOT
!include $(ROOT)\default.vc
!else
ROOT=..\..
!include $(ROOT)\default.vc
!endif

STATICLIB=libctf.lib
SHAREDLIB=libctf.dll 
IMPLIB=libctfdll.lib
DEF=libctf.def
EXP=libctfdll.exp
PDB=libctf.pdb

OBJS = $(ODIR)\ctf_create.obj \
	 $(ODIR)\ctf_decl.obj \
	 $(ODIR)\ctf_error.obj \
	 $(ODIR)\ctf_hash.obj \
	 $(ODIR)\ctf_labels.obj \
	 $(ODIR)\ctf_lib.obj \
	 $(ODIR)\ctf_lookup.obj \
	 $(ODIR)\ctf_open.obj \
	 $(ODIR)\ctf_subr.obj \
	 $(ODIR)\ctf_types.obj \
	 $(ODIR)\ctf_util.obj

OBJA =


all: setup $(INST_LIB_DIR)/$(STATICLIB) 
static: setup $(INST_LIB_DIR)/$(STATICLIB)
dynamic: setup $(INST_EXE_DIR)/$(SHAREDLIB)

$(INST_LIB_DIR)/$(STATICLIB): $(OBJS) $(OBJA)
	$(AR) $(ARFLAGS) -out:$@ $(OBJS) $(OBJA)

$(INST_LIB_DIR)/$(IMPLIB): $(INST_EXE_DIR)/$(SHAREDLIB)

$(INST_EXE_DIR)/$(SHAREDLIB): $(OBJS) $(OBJA)
	$(LD) $(LDFLAGS)  -def:$(DEF) -dll -implib:$(INST_LIB_DIR)/$(IMPLIB) \
	  -out:$@  $(OBJS) $(OBJA) zlib.lib

{$(TOP)}.c.obj:
	$(CC)  $(ARCH_FLAGS) $(CFLAGS) /Fo$(ODIR)\ /c $<

setup:
	-@ if NOT EXIST $(ODIR) mkdir $(ODIR)
	-@ if NOT EXIST $(INST_LIB_DIR) mkdir $(INST_LIB_DIR)
	-@ if NOT EXIST $(INST_EXE_DIR) mkdir $(INST_EXE_DIR)

clean:
	-del $(INST_LIB_DIR)\$(STATICLIB)
	-del $(INST_EXE_DIR)\$(SHAREDLIB)
	-del $(INST_LIB_DIR)\$(IMPLIB)
	-del $(ODIR)\*.obj
	-del $(INST_LIB_DIR)\$(EXP)
	-del $(INST_EXE_DIR)\$(PDB)
	-del $(INST_EXE_DIR)\$(SHAREDLIB).manifest